{
  "vulnerabilities": {
    "tool": "safety",
    "packages_scanned": 1,
    "vulnerabilities_found": 1,
    "vulnerabilities": [
      {
        "error": "Safety scan failed",
        "stderr": "/Users/rsainju/Research/1_Research_Personal/code-explainer/.venv/lib/python3.9/site-packages/urllib3/__init__.py:35: NotOpenSSLWarning: urllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'LibreSSL 2.8.3'. See: https://github.com/urllib3/urllib3/issues/3020\n  warnings.warn(\n/Users/rsainju/Research/1_Research_Personal/code-explainer/.venv/lib/python3.9/site-packages/safety/safety.py:1857: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.p"
      }
    ],
    "status": "completed"
  },
  "code_issues": {
    "tool": "bandit",
    "issues_found": 141,
    "issues": [
      {
        "code": "387                 \"explanation\": explanation,\n388                 \"code_hash\": hashlib.md5(code.encode()).hexdigest()\n389             }\n",
        "col_offset": 29,
        "end_col_offset": 55,
        "filename": "src/code_explainer/advanced_ui_ux.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 388,
        "line_range": [
          388
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      },
      {
        "code": "128         for i in range(count):\n129             pattern = random.choice(self.injection_patterns)\n130             action = random.choice(self.malicious_actions)\n",
        "col_offset": 22,
        "end_col_offset": 60,
        "filename": "src/code_explainer/adversarial_testing.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 129,
        "line_range": [
          129
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "129             pattern = random.choice(self.injection_patterns)\n130             action = random.choice(self.malicious_actions)\n131             role = random.choice(self.malicious_roles)\n",
        "col_offset": 21,
        "end_col_offset": 58,
        "filename": "src/code_explainer/adversarial_testing.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 130,
        "line_range": [
          130
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "130             action = random.choice(self.malicious_actions)\n131             role = random.choice(self.malicious_roles)\n132 \n",
        "col_offset": 19,
        "end_col_offset": 54,
        "filename": "src/code_explainer/adversarial_testing.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 131,
        "line_range": [
          131
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "149             test = AdversarialTest(\n150                 test_id=f\"injection_{i}_{hashlib.md5(full_prompt.encode()).hexdigest()[:8]}\",\n151                 attack_type=AttackType.PROMPT_INJECTION,\n",
        "col_offset": 41,
        "end_col_offset": 74,
        "filename": "src/code_explainer/adversarial_testing.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 150,
        "line_range": [
          150
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      },
      {
        "code": "212         for i in range(count):\n213             category = random.choice(list(self.malicious_patterns.keys()))\n214             malicious_code = random.choice(self.malicious_patterns[category])\n",
        "col_offset": 23,
        "end_col_offset": 74,
        "filename": "src/code_explainer/adversarial_testing.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 213,
        "line_range": [
          213
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "213             category = random.choice(list(self.malicious_patterns.keys()))\n214             malicious_code = random.choice(self.malicious_patterns[category])\n215 \n",
        "col_offset": 29,
        "end_col_offset": 77,
        "filename": "src/code_explainer/adversarial_testing.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 214,
        "line_range": [
          214
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "231             test = AdversarialTest(\n232                 test_id=f\"malcode_{i}_{category}_{hashlib.md5(malicious_code.encode()).hexdigest()[:8]}\",\n233                 attack_type=AttackType.MALICIOUS_CODE,\n",
        "col_offset": 50,
        "end_col_offset": 86,
        "filename": "src/code_explainer/adversarial_testing.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 232,
        "line_range": [
          232
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      },
      {
        "code": "292             test = AdversarialTest(\n293                 test_id=f\"jailbreak_{i}_{hashlib.md5(technique.encode()).hexdigest()[:8]}\",\n294                 attack_type=AttackType.JAILBREAKING,\n",
        "col_offset": 41,
        "end_col_offset": 72,
        "filename": "src/code_explainer/adversarial_testing.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 293,
        "line_range": [
          293
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      },
      {
        "code": "229     port = int(os.getenv(\"PORT\", \"8000\"))\n230     host = os.getenv(\"HOST\", \"0.0.0.0\")\n231 \n",
        "col_offset": 29,
        "end_col_offset": 38,
        "filename": "src/code_explainer/api.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 605,
          "link": "https://cwe.mitre.org/data/definitions/605.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Possible binding to all interfaces.",
        "line_number": 230,
        "line_range": [
          230
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b104_hardcoded_bind_all_interfaces.html",
        "test_id": "B104",
        "test_name": "hardcoded_bind_all_interfaces"
      },
      {
        "code": "52     def get_remote_address(request):  # type: ignore\n53         return \"0.0.0.0\"\n54     def _rate_limit_exceeded_handler(request, exc):  # type: ignore\n",
        "col_offset": 15,
        "end_col_offset": 24,
        "filename": "src/code_explainer/api/server.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 605,
          "link": "https://cwe.mitre.org/data/definitions/605.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Possible binding to all interfaces.",
        "line_number": 53,
        "line_range": [
          53
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b104_hardcoded_bind_all_interfaces.html",
        "test_id": "B104",
        "test_name": "hardcoded_bind_all_interfaces"
      },
      {
        "code": "386         \"\"\"Publish API docs to README file.\"\"\"\n387         md_docs = self.generator.generate_markdown_docs(Path(\"/tmp/temp_api_docs.md\"))\n388 \n",
        "col_offset": 61,
        "end_col_offset": 84,
        "filename": "src/code_explainer/api_documentation_generator.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 377,
          "link": "https://cwe.mitre.org/data/definitions/377.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Probable insecure usage of temp file/directory.",
        "line_number": 387,
        "line_range": [
          387
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b108_hardcoded_tmp_directory.html",
        "test_id": "B108",
        "test_name": "hardcoded_tmp_directory"
      },
      {
        "code": "388 \n389         with open(\"/tmp/temp_api_docs.md\", 'r') as f:\n390             docs_content = f.read()\n",
        "col_offset": 18,
        "end_col_offset": 41,
        "filename": "src/code_explainer/api_documentation_generator.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 377,
          "link": "https://cwe.mitre.org/data/definitions/377.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Probable insecure usage of temp file/directory.",
        "line_number": 389,
        "line_range": [
          389
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b108_hardcoded_tmp_directory.html",
        "test_id": "B108",
        "test_name": "hardcoded_tmp_directory"
      },
      {
        "code": "5 import logging\n6 import pickle\n7 import time\n",
        "col_offset": 0,
        "end_col_offset": 13,
        "filename": "src/code_explainer/cache.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 502,
          "link": "https://cwe.mitre.org/data/definitions/502.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Consider possible security implications associated with pickle module.",
        "line_number": 6,
        "line_range": [
          6
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b403-import-pickle",
        "test_id": "B403",
        "test_name": "blacklist"
      },
      {
        "code": "308             with open(cache_file, \"rb\") as f:\n309                 return pickle.load(f)\n310         except Exception as e:\n",
        "col_offset": 23,
        "end_col_offset": 37,
        "filename": "src/code_explainer/cache.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 502,
          "link": "https://cwe.mitre.org/data/definitions/502.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
        "line_number": 309,
        "line_range": [
          309
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b301-pickle",
        "test_id": "B301",
        "test_name": "blacklist"
      },
      {
        "code": "3 import os\n4 import subprocess\n5 import json\n",
        "col_offset": 0,
        "end_col_offset": 17,
        "filename": "src/code_explainer/ci_cd.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Consider possible security implications associated with the subprocess module.",
        "line_number": 4,
        "line_range": [
          4
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess",
        "test_id": "B404",
        "test_name": "blacklist"
      },
      {
        "code": "116                 command,\n117                 shell=True,\n118                 stdout=subprocess.PIPE,\n119                 stderr=subprocess.PIPE,\n120                 text=True,\n121                 cwd=working_dir,\n122                 env=full_env\n123             )\n124 \n125             try:\n126                 stdout, stderr = process.communicate(timeout=timeout)\n",
        "col_offset": 22,
        "end_col_offset": 13,
        "filename": "src/code_explainer/ci_cd.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "subprocess call with shell=True identified, security issue.",
        "line_number": 117,
        "line_range": [
          115,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html",
        "test_id": "B602",
        "test_name": "subprocess_popen_with_shell_equals_true"
      },
      {
        "code": "302                         items.append(json.loads(line))\n303                     except Exception:\n304                         # skip malformed lines\n305                         continue\n306             return items\n",
        "col_offset": 20,
        "end_col_offset": 32,
        "filename": "src/code_explainer/cli.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Continue detected.",
        "line_number": 303,
        "line_range": [
          303,
          304,
          305
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b112_try_except_continue.html",
        "test_id": "B112",
        "test_name": "try_except_continue"
      },
      {
        "code": "316             data = data[: max(0, k)]\n317         except Exception:\n318             pass\n319 \n",
        "col_offset": 8,
        "end_col_offset": 16,
        "filename": "src/code_explainer/cli.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 317,
        "line_range": [
          317,
          318
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "1046         for _ in range(max(10, n_bootstrap)):\n1047             sample = [random.choice(base) for __ in base]\n1048             vals.append(sum(sample)/len(sample))\n",
        "col_offset": 22,
        "end_col_offset": 41,
        "filename": "src/code_explainer/cli.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 1047,
        "line_range": [
          1047
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "1051         for _ in range(max(10, n_bootstrap)):\n1052             sample = [random.choice(b) if b else [0.0] for b in base]\n1053             flat = [x for sub in sample for x in (sub if isinstance(sub, list) else [sub])]\n",
        "col_offset": 22,
        "end_col_offset": 38,
        "filename": "src/code_explainer/cli.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 1052,
        "line_range": [
          1052
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "99                 return candidate\n100         except Exception:\n101             pass\n102         # Fallback: try one level up (in case of unusual layouts)\n",
        "col_offset": 8,
        "end_col_offset": 16,
        "filename": "src/code_explainer/config/__init__.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 100,
        "line_range": [
          100,
          101
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "107                 return candidate\n108         except Exception:\n109             pass\n110         return None\n",
        "col_offset": 8,
        "end_col_offset": 16,
        "filename": "src/code_explainer/config/__init__.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 108,
        "line_range": [
          108,
          109
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "229         # Check if config changed\n230         new_hash = hashlib.md5(json.dumps(new_config, sort_keys=True).encode()).hexdigest()\n231         if new_hash != self.config_hash:\n",
        "col_offset": 19,
        "end_col_offset": 79,
        "filename": "src/code_explainer/config_management.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 230,
        "line_range": [
          230
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      },
      {
        "code": "412                        help=\"Logging level\")\n413     parser.add_argument(\"--host\", type=str, default=\"0.0.0.0\",\n414                        help=\"API server host\")\n",
        "col_offset": 52,
        "end_col_offset": 61,
        "filename": "src/code_explainer/config_management.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 605,
          "link": "https://cwe.mitre.org/data/definitions/605.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Possible binding to all interfaces.",
        "line_number": 413,
        "line_range": [
          413
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b104_hardcoded_bind_all_interfaces.html",
        "test_id": "B104",
        "test_name": "hardcoded_bind_all_interfaces"
      },
      {
        "code": "441         \"api\": {\n442             \"host\": \"0.0.0.0\",\n443             \"port\": 8000,\n444             \"workers\": 4\n445         }\n446     }\n447 \n",
        "col_offset": 20,
        "end_col_offset": 29,
        "filename": "src/code_explainer/config_management.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 605,
          "link": "https://cwe.mitre.org/data/definitions/605.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Possible binding to all interfaces.",
        "line_number": 442,
        "line_range": [
          441,
          442,
          443,
          444,
          445
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b104_hardcoded_bind_all_interfaces.html",
        "test_id": "B104",
        "test_name": "hardcoded_bind_all_interfaces"
      },
      {
        "code": "4 import tempfile\n5 import subprocess\n6 import logging\n",
        "col_offset": 0,
        "end_col_offset": 17,
        "filename": "src/code_explainer/container_security.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Consider possible security implications associated with the subprocess module.",
        "line_number": 5,
        "line_range": [
          5
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess",
        "test_id": "B404",
        "test_name": "blacklist"
      },
      {
        "code": "45         try:\n46             subprocess.run(\n47                 [\"docker\", \"--version\"],\n48                 capture_output=True,\n49                 check=True,\n50                 timeout=5\n51             )\n52         except (subprocess.CalledProcessError, subprocess.TimeoutExpired, FileNotFoundError):\n",
        "col_offset": 12,
        "end_col_offset": 13,
        "filename": "src/code_explainer/container_security.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Starting a process with a partial executable path",
        "line_number": 46,
        "line_range": [
          46,
          47,
          48,
          49,
          50,
          51
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html",
        "test_id": "B607",
        "test_name": "start_process_with_partial_path"
      },
      {
        "code": "45         try:\n46             subprocess.run(\n47                 [\"docker\", \"--version\"],\n48                 capture_output=True,\n49                 check=True,\n50                 timeout=5\n51             )\n52         except (subprocess.CalledProcessError, subprocess.TimeoutExpired, FileNotFoundError):\n",
        "col_offset": 12,
        "end_col_offset": 13,
        "filename": "src/code_explainer/container_security.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "subprocess call - check for execution of untrusted input.",
        "line_number": 46,
        "line_range": [
          46,
          47,
          48,
          49,
          50,
          51
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html",
        "test_id": "B603",
        "test_name": "subprocess_without_shell_equals_true"
      },
      {
        "code": "103             try:\n104                 result = subprocess.run(\n105                     docker_cmd,\n106                     capture_output=capture_output,\n107                     text=True,\n108                     timeout=self.timeout\n109                 )\n110                 execution_time = time.time() - start_time\n",
        "col_offset": 25,
        "end_col_offset": 17,
        "filename": "src/code_explainer/container_security.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "subprocess call - check for execution of untrusted input.",
        "line_number": 104,
        "line_range": [
          104,
          105,
          106,
          107,
          108,
          109
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html",
        "test_id": "B603",
        "test_name": "subprocess_without_shell_equals_true"
      },
      {
        "code": "142             \"--read-only\",  # Read-only filesystem\n143             \"--tmpfs\", \"/tmp:rw,noexec,nosuid,size=100m\",  # Writable tmp with restrictions\n144             \"--memory\", self.memory_limit,\n145             \"--cpus\", self.cpu_limit,\n146             \"--security-opt\", \"no-new-privileges\",  # Prevent privilege escalation\n147             \"--cap-drop\", \"ALL\",  # Drop all capabilities\n148             \"--user\", \"1000:1000\",  # Run as non-root user\n149             \"-v\", f\"{temp_path}:/workspace:ro\",  # Mount code directory read-only\n150             \"-w\", \"/workspace\",  # Set working directory\n151         ]\n152 \n153         if self.network_disabled:\n154             cmd.extend([\"--network\", \"none\"])\n155 \n156         # Add image and command\n",
        "col_offset": 23,
        "end_col_offset": 56,
        "filename": "src/code_explainer/container_security.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 377,
          "link": "https://cwe.mitre.org/data/definitions/377.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Probable insecure usage of temp file/directory.",
        "line_number": 143,
        "line_range": [
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b108_hardcoded_tmp_directory.html",
        "test_id": "B108",
        "test_name": "hardcoded_tmp_directory"
      },
      {
        "code": "422 \n423             exec(code, restricted_globals)\n424             execution_time = time.time() - start_time\n",
        "col_offset": 12,
        "end_col_offset": 42,
        "filename": "src/code_explainer/container_security.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Use of exec detected.",
        "line_number": 423,
        "line_range": [
          423
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b102_exec_used.html",
        "test_id": "B102",
        "test_name": "exec_used"
      },
      {
        "code": "14 from concurrent.futures import ThreadPoolExecutor\n15 import pickle\n16 \n",
        "col_offset": 0,
        "end_col_offset": 13,
        "filename": "src/code_explainer/contamination_detection.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 502,
          "link": "https://cwe.mitre.org/data/definitions/502.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Consider possible security implications associated with pickle module.",
        "line_number": 15,
        "line_range": [
          15
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b403-import-pickle",
        "test_id": "B403",
        "test_name": "blacklist"
      },
      {
        "code": "115                 self.ast_patterns[pattern_hash] = sample_id\n116         except:\n117             pass  # Skip if AST parsing fails\n118 \n",
        "col_offset": 8,
        "end_col_offset": 16,
        "filename": "src/code_explainer/contamination_detection.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 116,
        "line_range": [
          116,
          117
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "441             with open(filepath, 'rb') as f:\n442                 state = pickle.load(f)\n443 \n",
        "col_offset": 24,
        "end_col_offset": 38,
        "filename": "src/code_explainer/contamination_detection.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 502,
          "link": "https://cwe.mitre.org/data/definitions/502.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
        "line_number": 442,
        "line_range": [
          442
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b301-pickle",
        "test_id": "B301",
        "test_name": "blacklist"
      },
      {
        "code": "44     alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n45     return \"cf_\" + \"\".join(random.choice(alphabet) for _ in range(6))\n46 \n",
        "col_offset": 27,
        "end_col_offset": 50,
        "filename": "src/code_explainer/counterfactuals.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 45,
        "line_range": [
          45
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "69             if node.body and len(node.body) >= 1:\n70                 idx = random.randint(0, len(node.body))\n71                 node.body.insert(idx, ast.parse(\"pass\").body[0])\n",
        "col_offset": 22,
        "end_col_offset": 55,
        "filename": "src/code_explainer/counterfactuals.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 70,
        "line_range": [
          70
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "45 \n46     ds = load_dataset(hub_id, split=split)\n47     data: List[Dict[str, Any]] = ds.to_list()\n",
        "col_offset": 9,
        "end_col_offset": 42,
        "filename": "src/code_explainer/data/datasets.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 494,
          "link": "https://cwe.mitre.org/data/definitions/494.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Unsafe Hugging Face Hub download without revision pinning in load_dataset()",
        "line_number": 46,
        "line_range": [
          46
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b615_huggingface_unsafe_download.html",
        "test_id": "B615",
        "test_name": "huggingface_unsafe_download"
      },
      {
        "code": "159 \n160             return random.choice(samples)\n161 \n",
        "col_offset": 19,
        "end_col_offset": 41,
        "filename": "src/code_explainer/dynamic_evaluation.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 160,
        "line_range": [
          160
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "188         else:\n189             task_type = random.choice(list(self.templates.keys()))\n190 \n",
        "col_offset": 24,
        "end_col_offset": 66,
        "filename": "src/code_explainer/dynamic_evaluation.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 189,
        "line_range": [
          189
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "194         # Get template\n195         template_data = random.choice(self.templates[task_type])\n196         template = template_data[\"template\"]\n",
        "col_offset": 24,
        "end_col_offset": 64,
        "filename": "src/code_explainer/dynamic_evaluation.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 195,
        "line_range": [
          195
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "432                 # Default scoring\n433                 score = random.uniform(0.4, 0.9)  # Placeholder\n434 \n",
        "col_offset": 24,
        "end_col_offset": 48,
        "filename": "src/code_explainer/dynamic_evaluation.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 433,
        "line_range": [
          433
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "592 \n593     uvicorn.run(app, host=\"0.0.0.0\", port=8000, log_level=\"info\")\n594 \n",
        "col_offset": 26,
        "end_col_offset": 35,
        "filename": "src/code_explainer/enhanced_api.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 605,
          "link": "https://cwe.mitre.org/data/definitions/605.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Possible binding to all interfaces.",
        "line_number": 593,
        "line_range": [
          593
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b104_hardcoded_bind_all_interfaces.html",
        "test_id": "B104",
        "test_name": "hardcoded_bind_all_interfaces"
      },
      {
        "code": "662                     confidence = max(confidence, 0.6)\n663             except Exception:\n664                 pass\n665 \n",
        "col_offset": 12,
        "end_col_offset": 20,
        "filename": "src/code_explainer/enhanced_language_processor.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 663,
        "line_range": [
          663,
          664
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "464         \"\"\"\n465         import subprocess\n466         import json\n",
        "col_offset": 8,
        "end_col_offset": 25,
        "filename": "src/code_explainer/enhanced_testing.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Consider possible security implications associated with the subprocess module.",
        "line_number": 465,
        "line_range": [
          465
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess",
        "test_id": "B404",
        "test_name": "blacklist"
      },
      {
        "code": "477 \n478             result = subprocess.run(cmd, capture_output=True, text=True, timeout=300)\n479 \n",
        "col_offset": 21,
        "end_col_offset": 85,
        "filename": "src/code_explainer/enhanced_testing.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "subprocess call - check for execution of untrusted input.",
        "line_number": 478,
        "line_range": [
          478
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html",
        "test_id": "B603",
        "test_name": "subprocess_without_shell_equals_true"
      },
      {
        "code": "131 \n132     def start_server(self, host: str = \"0.0.0.0\", port: int = 8000):\n133         \"\"\"Start the API server.\"\"\"\n",
        "col_offset": 39,
        "end_col_offset": 48,
        "filename": "src/code_explainer/enterprise_api.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 605,
          "link": "https://cwe.mitre.org/data/definitions/605.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Possible binding to all interfaces.",
        "line_number": 132,
        "line_range": [
          132
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b104_hardcoded_bind_all_interfaces.html",
        "test_id": "B104",
        "test_name": "hardcoded_bind_all_interfaces"
      },
      {
        "code": "70                     content = self._normalize_content(train_item[field])\n71                     content_hash = hashlib.md5(content.encode()).hexdigest()\n72                     train_hashes[content_hash] = (i, field, content)\n",
        "col_offset": 35,
        "end_col_offset": 64,
        "filename": "src/code_explainer/evaluation/contamination.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 71,
        "line_range": [
          71
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      },
      {
        "code": "80                     content = self._normalize_content(test_item[field])\n81                     content_hash = hashlib.md5(content.encode()).hexdigest()\n82 \n",
        "col_offset": 35,
        "end_col_offset": 64,
        "filename": "src/code_explainer/evaluation/contamination.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 81,
        "line_range": [
          81
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      },
      {
        "code": "91 \n92         typo_positions = random.sample(range(len(words)), min(num_typos, len(words)))\n93 \n",
        "col_offset": 25,
        "end_col_offset": 85,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 92,
        "line_range": [
          92
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "97                 # Random character substitution, deletion, or insertion\n98                 typo_type = random.choice(['substitute', 'delete', 'insert'])\n99 \n",
        "col_offset": 28,
        "end_col_offset": 77,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 98,
        "line_range": [
          98
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "100                 if typo_type == 'substitute':\n101                     char_pos = random.randint(0, len(word) - 1)\n102                     new_char = random.choice(string.ascii_lowercase)\n",
        "col_offset": 31,
        "end_col_offset": 63,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 101,
        "line_range": [
          101
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "101                     char_pos = random.randint(0, len(word) - 1)\n102                     new_char = random.choice(string.ascii_lowercase)\n103                     word = word[:char_pos] + new_char + word[char_pos + 1:]\n",
        "col_offset": 31,
        "end_col_offset": 68,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 102,
        "line_range": [
          102
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "104                 elif typo_type == 'delete':\n105                     char_pos = random.randint(0, len(word) - 1)\n106                     word = word[:char_pos] + word[char_pos + 1:]\n",
        "col_offset": 31,
        "end_col_offset": 63,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 105,
        "line_range": [
          105
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "107                 elif typo_type == 'insert':\n108                     char_pos = random.randint(0, len(word))\n109                     new_char = random.choice(string.ascii_lowercase)\n",
        "col_offset": 31,
        "end_col_offset": 59,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 108,
        "line_range": [
          108
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "108                     char_pos = random.randint(0, len(word))\n109                     new_char = random.choice(string.ascii_lowercase)\n110                     word = word[:char_pos] + new_char + word[char_pos:]\n",
        "col_offset": 31,
        "end_col_offset": 68,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 109,
        "line_range": [
          109
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "130 \n131         change_positions = random.sample(range(len(words)), min(num_changes, len(words)))\n132 \n",
        "col_offset": 27,
        "end_col_offset": 89,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 131,
        "line_range": [
          131
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "134             word = words[pos]\n135             case_type = random.choice(['upper', 'lower', 'title', 'random'])\n136 \n",
        "col_offset": 24,
        "end_col_offset": 76,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 135,
        "line_range": [
          135
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "144                 words[pos] = ''.join(\n145                     c.upper() if random.random() < 0.5 else c.lower()\n146                     for c in word\n",
        "col_offset": 33,
        "end_col_offset": 48,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 145,
        "line_range": [
          145
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "163         # Add extra spaces\n164         if random.random() < severity:\n165             text = re.sub(r' ', '  ', text)\n",
        "col_offset": 11,
        "end_col_offset": 26,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 164,
        "line_range": [
          164
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "167         # Add tabs and newlines\n168         if random.random() < severity:\n169             words = text.split()\n",
        "col_offset": 11,
        "end_col_offset": 26,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 168,
        "line_range": [
          168
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "170             for i in range(len(words)):\n171                 if random.random() < severity / 2:\n172                     words[i] += random.choice(['\\t', '\\n', '  '])\n",
        "col_offset": 19,
        "end_col_offset": 34,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 171,
        "line_range": [
          171
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "171                 if random.random() < severity / 2:\n172                     words[i] += random.choice(['\\t', '\\n', '  '])\n173             text = ' '.join(words)\n",
        "col_offset": 32,
        "end_col_offset": 65,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 172,
        "line_range": [
          172
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "175         # Remove some spaces\n176         if random.random() < severity:\n177             text = re.sub(r'  +', ' ', text)\n",
        "col_offset": 11,
        "end_col_offset": 26,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 176,
        "line_range": [
          176
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "193         # Remove some punctuation\n194         if random.random() < severity:\n195             text = re.sub(r'[,.;:]', '', text)\n",
        "col_offset": 11,
        "end_col_offset": 26,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 194,
        "line_range": [
          194
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "197         # Add extra punctuation\n198         if random.random() < severity:\n199             words = text.split()\n",
        "col_offset": 11,
        "end_col_offset": 26,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 198,
        "line_range": [
          198
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "200             for i in range(len(words)):\n201                 if random.random() < severity / 2:\n202                     words[i] += random.choice(['.', ',', ';', '!', '?'])\n",
        "col_offset": 19,
        "end_col_offset": 34,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 201,
        "line_range": [
          201
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "201                 if random.random() < severity / 2:\n202                     words[i] += random.choice(['.', ',', ';', '!', '?'])\n203             text = ' '.join(words)\n",
        "col_offset": 32,
        "end_col_offset": 72,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 202,
        "line_range": [
          202
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "205         # Change punctuation\n206         if random.random() < severity:\n207             punctuation_map = {'.': '!', '!': '?', '?': '.', ',': ';', ';': ','}\n",
        "col_offset": 11,
        "end_col_offset": 26,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 206,
        "line_range": [
          206
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "208             for old, new in punctuation_map.items():\n209                 if random.random() < 0.3:\n210                     text = text.replace(old, new)\n",
        "col_offset": 19,
        "end_col_offset": 34,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 209,
        "line_range": [
          209
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "250         if replacement_positions:\n251             selected_positions = random.sample(\n252                 replacement_positions,\n253                 min(num_replacements, len(replacement_positions))\n254             )\n255 \n",
        "col_offset": 33,
        "end_col_offset": 13,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 251,
        "line_range": [
          251,
          252,
          253,
          254
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "259                 if word_lower in self.synonyms:\n260                     synonym = random.choice(self.synonyms[word_lower])\n261                     # Preserve case and punctuation\n",
        "col_offset": 30,
        "end_col_offset": 70,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 260,
        "line_range": [
          260
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "285         # Variable name obfuscation\n286         if random.random() < severity:\n287             # Find variable names (simplified)\n",
        "col_offset": 11,
        "end_col_offset": 26,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 286,
        "line_range": [
          286
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "301             num_obfuscations = max(1, int(len(variables) * severity))\n302             vars_to_obfuscate = random.sample(list(variables), min(num_obfuscations, len(variables)))\n303 \n",
        "col_offset": 32,
        "end_col_offset": 101,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 302,
        "line_range": [
          302
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "304             for var in vars_to_obfuscate:\n305                 obfuscated_name = f\"var_{random.randint(1000, 9999)}\"\n306                 text = re.sub(r'\\b' + re.escape(var) + r'\\b', obfuscated_name, text)\n",
        "col_offset": 41,
        "end_col_offset": 67,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 305,
        "line_range": [
          305
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "308         # Add unnecessary parentheses\n309         if random.random() < severity:\n310             # Simple expression wrapping\n",
        "col_offset": 11,
        "end_col_offset": 26,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 309,
        "line_range": [
          309
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "313         # Add extra whitespace in code\n314         if random.random() < severity:\n315             text = re.sub(r'([=+\\-*/,()])', r' \\1 ', text)\n",
        "col_offset": 11,
        "end_col_offset": 26,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 314,
        "line_range": [
          314
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "341 \n342         if random.random() < severity:\n343             for char, alternatives in substitutions.items():\n",
        "col_offset": 11,
        "end_col_offset": 26,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 342,
        "line_range": [
          342
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "343             for char, alternatives in substitutions.items():\n344                 if char in text.lower() and random.random() < 0.3:\n345                     replacement = random.choice(alternatives)\n",
        "col_offset": 44,
        "end_col_offset": 59,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 344,
        "line_range": [
          344
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "344                 if char in text.lower() and random.random() < 0.3:\n345                     replacement = random.choice(alternatives)\n346                     # Maintain case\n",
        "col_offset": 34,
        "end_col_offset": 61,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 345,
        "line_range": [
          345
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "352                     if positions:\n353                         pos = random.choice(positions)\n354                         text = text[:pos] + replacement + text[pos + 1:]\n",
        "col_offset": 30,
        "end_col_offset": 54,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 353,
        "line_range": [
          353
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "356         # Add invisible characters\n357         if random.random() < severity:\n358             invisible_chars = ['\\u200b', '\\u200c', '\\u200d']  # Zero-width characters\n",
        "col_offset": 11,
        "end_col_offset": 26,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 357,
        "line_range": [
          357
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "360             for i in range(len(words)):\n361                 if random.random() < severity / 2:\n362                     words[i] += random.choice(invisible_chars)\n",
        "col_offset": 19,
        "end_col_offset": 34,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 361,
        "line_range": [
          361
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "361                 if random.random() < severity / 2:\n362                     words[i] += random.choice(invisible_chars)\n363             text = ' '.join(words)\n",
        "col_offset": 32,
        "end_col_offset": 62,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 362,
        "line_range": [
          362
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "410         if max_examples_per_test:\n411             examples = random.sample(examples, min(max_examples_per_test, len(examples)))\n412 \n",
        "col_offset": 23,
        "end_col_offset": 89,
        "filename": "src/code_explainer/evaluation/robustness.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 411,
        "line_range": [
          411
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "40         content = f\"{self.input_code}_{self.strategy or 'default'}\"\n41         return hashlib.md5(content.encode()).hexdigest()\n42 \n",
        "col_offset": 15,
        "end_col_offset": 44,
        "filename": "src/code_explainer/golden_tests.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 41,
        "line_range": [
          41
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      },
      {
        "code": "406 \n407     uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n408 \n",
        "col_offset": 26,
        "end_col_offset": 35,
        "filename": "src/code_explainer/graphql_api.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 605,
          "link": "https://cwe.mitre.org/data/definitions/605.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Possible binding to all interfaces.",
        "line_number": 407,
        "line_range": [
          407
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b104_hardcoded_bind_all_interfaces.html",
        "test_id": "B104",
        "test_name": "hardcoded_bind_all_interfaces"
      },
      {
        "code": "190         # Sample examples for evaluation\n191         indices = random.sample(range(len(predictions)), min(sample_size, len(predictions)))\n192 \n",
        "col_offset": 18,
        "end_col_offset": 92,
        "filename": "src/code_explainer/icml_evaluation.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 191,
        "line_range": [
          191
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "337         if low_quality_indices:\n338             sampled_errors = random.sample(low_quality_indices, sample_size)\n339 \n",
        "col_offset": 29,
        "end_col_offset": 76,
        "filename": "src/code_explainer/icml_evaluation.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 338,
        "line_range": [
          338
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "35 import shutil\n36 import subprocess\n37 import sys\n",
        "col_offset": 0,
        "end_col_offset": 17,
        "filename": "src/code_explainer/integration_testing.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Consider possible security implications associated with the subprocess module.",
        "line_number": 36,
        "line_range": [
          36
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess",
        "test_id": "B404",
        "test_name": "blacklist"
      },
      {
        "code": "53                 score_sum += float(scores[\"codebleu\"])\n54             except Exception:\n55                 pass\n56         return float(score_sum / n)\n",
        "col_offset": 12,
        "end_col_offset": 20,
        "filename": "src/code_explainer/metrics/evaluate.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 54,
        "line_range": [
          54,
          55
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "32 import shutil\n33 import subprocess\n34 from concurrent.futures import ThreadPoolExecutor, as_completed\n",
        "col_offset": 0,
        "end_col_offset": 17,
        "filename": "src/code_explainer/ml_pipeline_orchestrator.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Consider possible security implications associated with the subprocess module.",
        "line_number": 33,
        "line_range": [
          33
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess",
        "test_id": "B404",
        "test_name": "blacklist"
      },
      {
        "code": "364             for name, values in zip(param_names, param_ranges):\n365                 param_dict[name] = random.choice(values)\n366 \n",
        "col_offset": 35,
        "end_col_offset": 56,
        "filename": "src/code_explainer/ml_pipeline_orchestrator.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 365,
        "line_range": [
          365
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "173                 class _DummyTok:\n174                     pad_token = \"[PAD]\"\n175                     eos_token = \"</s>\"\n",
        "col_offset": 32,
        "end_col_offset": 39,
        "filename": "src/code_explainer/model.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 259,
          "link": "https://cwe.mitre.org/data/definitions/259.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Possible hardcoded password: '[PAD]'",
        "line_number": 174,
        "line_range": [
          174
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b105_hardcoded_password_string.html",
        "test_id": "B105",
        "test_name": "hardcoded_password_string"
      },
      {
        "code": "174                     pad_token = \"[PAD]\"\n175                     eos_token = \"</s>\"\n176                     pad_token_id = 0\n",
        "col_offset": 32,
        "end_col_offset": 38,
        "filename": "src/code_explainer/model.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 259,
          "link": "https://cwe.mitre.org/data/definitions/259.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Possible hardcoded password: '</s>'",
        "line_number": 175,
        "line_range": [
          175
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b105_hardcoded_password_string.html",
        "test_id": "B105",
        "test_name": "hardcoded_password_string"
      },
      {
        "code": "414         \"\"\"Internal method for batch processing of explanations.\"\"\"\n415         assert self.tokenizer is not None and self.model is not None\n416         tok = self.tokenizer\n",
        "col_offset": 8,
        "end_col_offset": 68,
        "filename": "src/code_explainer/model.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "line_number": 415,
        "line_range": [
          415
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html",
        "test_id": "B101",
        "test_name": "assert_used"
      },
      {
        "code": "859                 return {}\n860         except Exception:\n861             pass\n862 \n",
        "col_offset": 8,
        "end_col_offset": 16,
        "filename": "src/code_explainer/model.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 860,
        "line_range": [
          860,
          861
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "866                 return cast(Dict[str, Any], cfg.dict())\n867         except Exception:\n868             pass\n869 \n",
        "col_offset": 8,
        "end_col_offset": 16,
        "filename": "src/code_explainer/model.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 867,
        "line_range": [
          867,
          868
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "875                 return cast(Dict[str, Any], asdict(cfg))\n876         except Exception:\n877             pass\n878 \n",
        "col_offset": 8,
        "end_col_offset": 16,
        "filename": "src/code_explainer/model.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 876,
        "line_range": [
          876,
          877
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "924                             level = name\n925                     except Exception:\n926                         pass\n927 \n",
        "col_offset": 20,
        "end_col_offset": 28,
        "filename": "src/code_explainer/model.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 925,
        "line_range": [
          925,
          926
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "96         \"\"\"\n97         tokenizer = AutoTokenizer.from_pretrained(path)\n98         if getattr(tokenizer, \"pad_token\", None) is None:\n",
        "col_offset": 20,
        "end_col_offset": 55,
        "filename": "src/code_explainer/model_loader.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 494,
          "link": "https://cwe.mitre.org/data/definitions/494.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Unsafe Hugging Face Hub download without revision pinning in from_pretrained()",
        "line_number": 97,
        "line_range": [
          97
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b615_huggingface_unsafe_download.html",
        "test_id": "B615",
        "test_name": "huggingface_unsafe_download"
      },
      {
        "code": "149         if self.config.arch == \"seq2seq\":\n150             model = AutoModelForSeq2SeqLM.from_pretrained(path, **model_kwargs)\n151         else:\n",
        "col_offset": 20,
        "end_col_offset": 79,
        "filename": "src/code_explainer/model_loader.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 494,
          "link": "https://cwe.mitre.org/data/definitions/494.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Unsafe Hugging Face Hub download without revision pinning in from_pretrained()",
        "line_number": 150,
        "line_range": [
          150
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b615_huggingface_unsafe_download.html",
        "test_id": "B615",
        "test_name": "huggingface_unsafe_download"
      },
      {
        "code": "151         else:\n152             model = AutoModelForCausalLM.from_pretrained(path, **model_kwargs)\n153             if getattr(model.config, \"pad_token_id\", None) is None:\n",
        "col_offset": 20,
        "end_col_offset": 78,
        "filename": "src/code_explainer/model_loader.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 494,
          "link": "https://cwe.mitre.org/data/definitions/494.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Unsafe Hugging Face Hub download without revision pinning in from_pretrained()",
        "line_number": 152,
        "line_range": [
          152
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b615_huggingface_unsafe_download.html",
        "test_id": "B615",
        "test_name": "huggingface_unsafe_download"
      },
      {
        "code": "88     for i in range(20):\n89         a = random.randint(1, 100)\n90         b = random.randint(1, 100)\n",
        "col_offset": 12,
        "end_col_offset": 34,
        "filename": "src/code_explainer/open_evals.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 89,
        "line_range": [
          89
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "89         a = random.randint(1, 100)\n90         b = random.randint(1, 100)\n91         op = random.choice(['+', '-'])\n",
        "col_offset": 12,
        "end_col_offset": 34,
        "filename": "src/code_explainer/open_evals.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 90,
        "line_range": [
          90
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "90         b = random.randint(1, 100)\n91         op = random.choice(['+', '-'])\n92         if op == '+':\n",
        "col_offset": 13,
        "end_col_offset": 38,
        "filename": "src/code_explainer/open_evals.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 91,
        "line_range": [
          91
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "111     for i in range(15):\n112         num = random.randint(1, 100)\n113         expected = []\n",
        "col_offset": 14,
        "end_col_offset": 36,
        "filename": "src/code_explainer/open_evals.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 112,
        "line_range": [
          112
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "225             break\n226         question_type = random.choice([\"time\", \"space\"])\n227         if question_type == \"time\":\n",
        "col_offset": 24,
        "end_col_offset": 56,
        "filename": "src/code_explainer/open_evals.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 330,
          "link": "https://cwe.mitre.org/data/definitions/330.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "line_number": 226,
        "line_range": [
          226
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b311-random",
        "test_id": "B311",
        "test_name": "blacklist"
      },
      {
        "code": "404                 items.append(json.loads(line))\n405             except Exception:\n406                 continue\n407     return items\n",
        "col_offset": 12,
        "end_col_offset": 24,
        "filename": "src/code_explainer/open_evals.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Continue detected.",
        "line_number": 405,
        "line_range": [
          405,
          406
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b112_try_except_continue.html",
        "test_id": "B112",
        "test_name": "try_except_continue"
      },
      {
        "code": "179             'lines': len(code.splitlines()),\n180             'hash': hashlib.md5(code.encode()).hexdigest(),\n181         }\n",
        "col_offset": 20,
        "end_col_offset": 46,
        "filename": "src/code_explainer/performance.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 180,
        "line_range": [
          180
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      },
      {
        "code": "24 from concurrent.futures import ThreadPoolExecutor, ProcessPoolExecutor\n25 import pickle\n26 import hashlib\n",
        "col_offset": 0,
        "end_col_offset": 13,
        "filename": "src/code_explainer/performance_optimization.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 502,
          "link": "https://cwe.mitre.org/data/definitions/502.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Consider possible security implications associated with pickle module.",
        "line_number": 25,
        "line_range": [
          25
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b403-import-pickle",
        "test_id": "B403",
        "test_name": "blacklist"
      },
      {
        "code": "140         \"\"\"Get file path for cache key.\"\"\"\n141         key_hash = hashlib.md5(key.encode()).hexdigest()\n142         return os.path.join(self.cache_dir, f\"{key_hash}.cache\")\n",
        "col_offset": 19,
        "end_col_offset": 44,
        "filename": "src/code_explainer/performance_optimization.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 141,
        "line_range": [
          141
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      },
      {
        "code": "149                 with open(cache_path, 'rb') as f:\n150                     entry = pickle.load(f)\n151 \n",
        "col_offset": 28,
        "end_col_offset": 42,
        "filename": "src/code_explainer/performance_optimization.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 502,
          "link": "https://cwe.mitre.org/data/definitions/502.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
        "line_number": 150,
        "line_range": [
          150
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_calls.html#b301-pickle",
        "test_id": "B301",
        "test_name": "blacklist"
      },
      {
        "code": "4 import logging\n5 import pickle\n6 from pathlib import Path\n",
        "col_offset": 0,
        "end_col_offset": 13,
        "filename": "src/code_explainer/retrieval.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 502,
          "link": "https://cwe.mitre.org/data/definitions/502.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Consider possible security implications associated with pickle module.",
        "line_number": 5,
        "line_range": [
          5
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b403-import-pickle",
        "test_id": "B403",
        "test_name": "blacklist"
      },
      {
        "code": "192             self._ensure_bm25()\n193             assert self._bm25 is not None\n194             tokenized_query = list(self._tokenize(query_code))\n",
        "col_offset": 12,
        "end_col_offset": 41,
        "filename": "src/code_explainer/retrieval.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "line_number": 193,
        "line_range": [
          193
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html",
        "test_id": "B101",
        "test_name": "assert_used"
      },
      {
        "code": "283             self._ensure_bm25()\n284             assert self._bm25 is not None\n285             tokenized_query = list(self._tokenize(query_code))\n",
        "col_offset": 12,
        "end_col_offset": 41,
        "filename": "src/code_explainer/retrieval.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "line_number": 284,
        "line_range": [
          284
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html",
        "test_id": "B101",
        "test_name": "assert_used"
      },
      {
        "code": "6 import re\n7 import subprocess\n8 import tempfile\n",
        "col_offset": 0,
        "end_col_offset": 17,
        "filename": "src/code_explainer/security.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Consider possible security implications associated with the subprocess module.",
        "line_number": 7,
        "line_range": [
          7
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess",
        "test_id": "B404",
        "test_name": "blacklist"
      },
      {
        "code": "229             if capture_output:\n230                 result = subprocess.run(\n231                     cmd,\n232                     capture_output=True,\n233                     text=True,\n234                     timeout=self.timeout\n235                 )\n236 \n",
        "col_offset": 25,
        "end_col_offset": 17,
        "filename": "src/code_explainer/security.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "subprocess call - check for execution of untrusted input.",
        "line_number": 230,
        "line_range": [
          230,
          231,
          232,
          233,
          234,
          235
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html",
        "test_id": "B603",
        "test_name": "subprocess_without_shell_equals_true"
      },
      {
        "code": "243             else:\n244                 result = subprocess.run(cmd, timeout=self.timeout)\n245                 return {\n",
        "col_offset": 25,
        "end_col_offset": 66,
        "filename": "src/code_explainer/security.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "subprocess call - check for execution of untrusted input.",
        "line_number": 244,
        "line_range": [
          244
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html",
        "test_id": "B603",
        "test_name": "subprocess_without_shell_equals_true"
      },
      {
        "code": "267                 Path(temp_file).unlink()\n268             except Exception:\n269                 pass\n270 \n",
        "col_offset": 12,
        "end_col_offset": 20,
        "filename": "src/code_explainer/security.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 268,
        "line_range": [
          268,
          269
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "45         \"\"\"Initialize the feature extractor.\"\"\"\n46         self.tfidf_vectorizer = TfidfVectorizer(\n47             token_pattern=r\"\\b\\w+\\b\", ngram_range=(1, 2), max_features=1000, stop_words=\"english\"\n48         )\n49 \n",
        "col_offset": 32,
        "end_col_offset": 9,
        "filename": "src/code_explainer/similarity_engine.py",
        "issue_confidence": "MEDIUM",
        "issue_cwe": {
          "id": 259,
          "link": "https://cwe.mitre.org/data/definitions/259.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Possible hardcoded password: '\\b\\w+\\b'",
        "line_number": 46,
        "line_range": [
          46,
          47,
          48
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b106_hardcoded_password_funcarg.html",
        "test_id": "B106",
        "test_name": "hardcoded_password_funcarg"
      },
      {
        "code": "271                 )\n272         except Exception:\n273             pass\n274         return None\n",
        "col_offset": 8,
        "end_col_offset": 16,
        "filename": "src/code_explainer/symbolic.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 272,
        "line_range": [
          272,
          273
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "80 \n81         self.tokenizer = AutoTokenizer.from_pretrained(model_name, use_fast=True)\n82         assert self.tokenizer is not None\n",
        "col_offset": 25,
        "end_col_offset": 81,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 494,
          "link": "https://cwe.mitre.org/data/definitions/494.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Unsafe Hugging Face Hub download without revision pinning in from_pretrained()",
        "line_number": 81,
        "line_range": [
          81
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b615_huggingface_unsafe_download.html",
        "test_id": "B615",
        "test_name": "huggingface_unsafe_download"
      },
      {
        "code": "81         self.tokenizer = AutoTokenizer.from_pretrained(model_name, use_fast=True)\n82         assert self.tokenizer is not None\n83         # Ensure pad token exists\n",
        "col_offset": 8,
        "end_col_offset": 41,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "line_number": 82,
        "line_range": [
          82
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html",
        "test_id": "B101",
        "test_name": "assert_used"
      },
      {
        "code": "95         if self.arch == \"seq2seq\":\n96             self.model = AutoModelForSeq2SeqLM.from_pretrained(model_name, **model_kwargs)\n97         else:\n",
        "col_offset": 25,
        "end_col_offset": 90,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 494,
          "link": "https://cwe.mitre.org/data/definitions/494.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Unsafe Hugging Face Hub download without revision pinning in from_pretrained()",
        "line_number": 96,
        "line_range": [
          96
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b615_huggingface_unsafe_download.html",
        "test_id": "B615",
        "test_name": "huggingface_unsafe_download"
      },
      {
        "code": "97         else:\n98             self.model = AutoModelForCausalLM.from_pretrained(model_name, **model_kwargs)\n99             # For causal models, set pad token id to eos if needed\n",
        "col_offset": 25,
        "end_col_offset": 89,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 494,
          "link": "https://cwe.mitre.org/data/definitions/494.html"
        },
        "issue_severity": "MEDIUM",
        "issue_text": "Unsafe Hugging Face Hub download without revision pinning in from_pretrained()",
        "line_number": 98,
        "line_range": [
          98
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b615_huggingface_unsafe_download.html",
        "test_id": "B615",
        "test_name": "huggingface_unsafe_download"
      },
      {
        "code": "99             # For causal models, set pad token id to eos if needed\n100             assert self.model is not None\n101             if getattr(self.model.config, \"pad_token_id\", None) is None:\n",
        "col_offset": 12,
        "end_col_offset": 41,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "line_number": 100,
        "line_range": [
          100
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html",
        "test_id": "B101",
        "test_name": "assert_used"
      },
      {
        "code": "105         if not load_in_8bit:\n106             assert self.model is not None\n107             cast(Any, self.model).to(self.device)\n",
        "col_offset": 12,
        "end_col_offset": 41,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "line_number": 106,
        "line_range": [
          106
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html",
        "test_id": "B101",
        "test_name": "assert_used"
      },
      {
        "code": "173         \"\"\"Preprocess dataset for training with causal or seq2seq tokenization.\"\"\"\n174         assert self.tokenizer is not None, \"Tokenizer not loaded\"\n175         tok = self.tokenizer\n",
        "col_offset": 8,
        "end_col_offset": 65,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "line_number": 174,
        "line_range": [
          174
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html",
        "test_id": "B101",
        "test_name": "assert_used"
      },
      {
        "code": "287         \"\"\"Setup the Hugging Face trainer with config-driven flags.\"\"\"\n288         assert self.model is not None, \"Model not loaded\"\n289         assert self.tokenizer is not None, \"Tokenizer not loaded\"\n",
        "col_offset": 8,
        "end_col_offset": 57,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "line_number": 288,
        "line_range": [
          288
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html",
        "test_id": "B101",
        "test_name": "assert_used"
      },
      {
        "code": "288         assert self.model is not None, \"Model not loaded\"\n289         assert self.tokenizer is not None, \"Tokenizer not loaded\"\n290 \n",
        "col_offset": 8,
        "end_col_offset": 65,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "line_number": 289,
        "line_range": [
          289
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html",
        "test_id": "B101",
        "test_name": "assert_used"
      },
      {
        "code": "362                     predictions = predictions.argmax(axis=-1)\n363                 except Exception:\n364                     pass\n365             # Handle tuple predictions\n",
        "col_offset": 16,
        "end_col_offset": 24,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 363,
        "line_range": [
          363,
          364
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "420 \n421         assert self.trainer is not None, \"Trainer not set up\"\n422         logger.info(\"Beginning model training...\")\n",
        "col_offset": 8,
        "end_col_offset": 61,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "line_number": 421,
        "line_range": [
          421
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html",
        "test_id": "B101",
        "test_name": "assert_used"
      },
      {
        "code": "433     def _save_training_metrics(self, output_dir: str) -> None:\n434         assert self.trainer is not None and self.model is not None\n435         metrics_path = Path(output_dir) / \"training_metrics.json\"\n",
        "col_offset": 8,
        "end_col_offset": 66,
        "filename": "src/code_explainer/trainer.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "line_number": 434,
        "line_range": [
          434
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b101_assert_used.html",
        "test_id": "B101",
        "test_name": "assert_used"
      },
      {
        "code": "116                     imports.extend([f\"{mod}.{alias.name}\" for alias in node.names])\n117             except Exception:\n118                 pass\n119 \n",
        "col_offset": 12,
        "end_col_offset": 20,
        "filename": "src/code_explainer/utils.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 117,
        "line_range": [
          117,
          118
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "152                     imports.extend([f\"{mod}.{alias.name}\" for alias in node.names])\n153             except Exception:\n154                 pass\n155     return funcs, classes, imports\n",
        "col_offset": 12,
        "end_col_offset": 20,
        "filename": "src/code_explainer/utils.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Pass detected.",
        "line_number": 153,
        "line_range": [
          153,
          154
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
        "test_id": "B110",
        "test_name": "try_except_pass"
      },
      {
        "code": "222                         break\n223         except Exception:\n224             continue\n225     return docs\n",
        "col_offset": 8,
        "end_col_offset": 20,
        "filename": "src/code_explainer/utils.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 703,
          "link": "https://cwe.mitre.org/data/definitions/703.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Try, Except, Continue detected.",
        "line_number": 223,
        "line_range": [
          223,
          224
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b112_try_except_continue.html",
        "test_id": "B112",
        "test_name": "try_except_continue"
      },
      {
        "code": "243     import shlex\n244     import subprocess\n245     import sys\n",
        "col_offset": 4,
        "end_col_offset": 21,
        "filename": "src/code_explainer/utils.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "Consider possible security implications associated with the subprocess module.",
        "line_number": 244,
        "line_range": [
          244
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess",
        "test_id": "B404",
        "test_name": "blacklist"
      },
      {
        "code": "259     try:\n260         proc = subprocess.run(\n261             [sys.executable, \"-c\", wrapped],\n262             input=None,\n263             capture_output=True,\n264             text=True,\n265             timeout=max(timeout_s, 0.1),\n266             cwd=tempfile.gettempdir(),\n267             env={},\n268         )\n269         out = (proc.stdout or \"\").strip()\n",
        "col_offset": 15,
        "end_col_offset": 9,
        "filename": "src/code_explainer/utils.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 78,
          "link": "https://cwe.mitre.org/data/definitions/78.html"
        },
        "issue_severity": "LOW",
        "issue_text": "subprocess call - check for execution of untrusted input.",
        "line_number": 260,
        "line_range": [
          260,
          261,
          262,
          263,
          264,
          265,
          266,
          267,
          268
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html",
        "test_id": "B603",
        "test_name": "subprocess_without_shell_equals_true"
      },
      {
        "code": "200         \"\"\"Add a new notification.\"\"\"\n201         notification_id = hashlib.md5(f\"{title}{message}{time.time()}\".encode()).hexdigest()[:8]\n202 \n",
        "col_offset": 26,
        "end_col_offset": 80,
        "filename": "src/code_explainer/ux_overhaul.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 201,
        "line_range": [
          201
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      },
      {
        "code": "260         \"\"\"Submit user feedback.\"\"\"\n261         feedback_id = hashlib.md5(f\"{user_id}{title}{time.time()}\".encode()).hexdigest()\n262 \n",
        "col_offset": 22,
        "end_col_offset": 76,
        "filename": "src/code_explainer/ux_overhaul.py",
        "issue_confidence": "HIGH",
        "issue_cwe": {
          "id": 327,
          "link": "https://cwe.mitre.org/data/definitions/327.html"
        },
        "issue_severity": "HIGH",
        "issue_text": "Use of weak MD5 hash for security. Consider usedforsecurity=False",
        "line_number": 261,
        "line_range": [
          261
        ],
        "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html",
        "test_id": "B324",
        "test_name": "hashlib"
      }
    ],
    "metrics": {
      "CONFIDENCE.HIGH": 128,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 13,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 13,
      "SEVERITY.LOW": 107,
      "SEVERITY.MEDIUM": 21,
      "SEVERITY.UNDEFINED": 0,
      "loc": 29813,
      "nosec": 0,
      "skipped_tests": 0
    },
    "status": "completed"
  },
  "config_issues": {
    "tool": "config_checker",
    "issues_found": 2,
    "issues": [
      {
        "file": "bandit_results.json",
        "issue": "Potential hardcoded secret detected",
        "pattern": "password\\s*[:=]\\s*['\\\"]?[^'\\\"\\s]+['\\\"]?"
      },
      {
        "file": "bandit_results.json",
        "issue": "Potential hardcoded secret detected",
        "pattern": "token\\s*[:=]\\s*['\\\"]?[^'\\\"\\s]+['\\\"]?"
      }
    ],
    "status": "completed"
  },
  "container_issues": {
    "tool": "container_checker",
    "issues_found": 0,
    "issues": [],
    "status": "completed"
  },
  "summary": {
    "total_issues": 144,
    "critical_issues": 2,
    "scan_status": "completed",
    "recommendations": [
      "Update vulnerable dependencies to latest secure versions",
      "Review and fix code security issues identified by Bandit",
      "Remove hardcoded secrets and fix file permissions"
    ]
  },
  "semgrep_findings": {
    "tool": "semgrep",
    "findings": 0,
    "results": [],
    "status": "completed"
  }
}