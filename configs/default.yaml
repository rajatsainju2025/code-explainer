"""Configuration file for code explainer training and inference."""

# Model configuration
model:
  arch: "causal"      # "causal" (GPT-like) or "seq2seq" (T5/CodeT5)
  name: "distilgpt2"  # Base model to use
  max_length: 512     # Maximum sequence length
  temperature: 0.7    # Sampling temperature
  top_p: 0.9         # Nucleus sampling parameter
  top_k: 50          # Top-k sampling parameter
  # Device and optimization configuration
  device: "auto"      # "auto" | "cuda" | "mps" | "cpu"
  precision: "auto"   # "auto" | "fp32" | "fp16" | "bf16" | "8bit"
  torch_dtype: "auto" # Legacy - use precision instead
  load_in_8bit: false # Legacy - use precision: "8bit" instead

# Training configuration  
training:
  output_dir: "./results"
  num_train_epochs: 50
  per_device_train_batch_size: 4
  per_device_eval_batch_size: 4
  warmup_steps: 100
  weight_decay: 0.01
  logging_steps: 10
  eval_steps: 50
  save_steps: 100
  evaluation_strategy: "steps"
  load_best_model_at_end: true
  # Optimization flags
  fp16: false
  bf16: false
  gradient_checkpointing: false
  torch_compile: false
  
# Data configuration
data:
  train_file: "data/train.json"
  eval_file: "data/eval.json"
  test_file: "data/test.json"
  max_examples: null  # null for all examples
  augment_ratio: 0.0
  # Optional: Hugging Face Hub dataset id
  hub_id: null
  hub_split: "train"
  
# Prompt configuration
prompt:
  template: "Explain this Python code:\n```python\n{code}\n```\nExplanation:"
  language_templates:
    python: "Explain this Python code:\n```python\n{code}\n```\nExplanation:"
    javascript: "Explain this JavaScript code:\n```javascript\n{code}\n```\nExplanation:"
    java: "Explain this Java code:\n```java\n{code}\n```\nExplanation:"
    cpp: "Explain this C++ code:\n```cpp\n{code}\n```\nExplanation:"
  max_code_length: 200
  max_explanation_length: 300
  # Prompt strategies: vanilla | ast_augmented | retrieval_augmented | execution_trace
  strategy: vanilla

# Logging configuration
logging:
  level: "INFO"
  log_file: "logs/code_explainer.log"
